name: npm Tests
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  # Triggers the workflow on labeled PRs only.
  pull_request_target:
    types: [labeled]
# Ensures that only the latest commit is running for each PR at a time.
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}-${{ github.ref }}
  cancel-in-progress: true
jobs:
  npm-Tests:
    if: contains(github.event.pull_request.labels.*.name, 'safe to test') || github.event_name == 'push'
    name: npm tests (${{ matrix.os }}) (${{ matrix.node }})
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-13 ]
        node: [ "12", "13", "14", "15", "16", "17", "18", "19", "20", "21","22","23","24" ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.22.x
          cache: false
      - name: Install npm
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      - name: Go Cache
        uses: actions/cache@v4
        with:
          path: ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: ${{ runner.os }}-go-
      - name: Setup Artifactory
        run: |
          go install github.com/jfrog/jfrog-testing-infra/local-rt-setup@latest
          ~/go/bin/local-rt-setup
        env:
          RTLIC: ${{secrets.RTLIC}}
          GOPROXY: direct
      - name: Npm version
        run: |
          npm -v
          node -v
      - name: Run npm tests
        #run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.npm --jfrog.url=${{ secrets.PLATFORM_URL }} --jfrog.user=${{ secrets.PLATFORM_USER }} --jfrog.password=${{ secrets.PLATFORM_PASSWORD }}
        run: go test -v github.com/jfrog/jfrog-cli --timeout 0 --test.npm
